// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Issue {
  id          Int      @id @default(autoincrement())
  title       String   @db.VarChar(255) // varchar(191) - variable character
  company     String   @db.VarChar(255)
  companyLink String   @db.Text
  jobLink     String   @db.Text
  phoneNumber String   @db.VarChar(255)
  email       String   @db.VarChar(255)
  workModel   WorkModel
  tags        String   @db.VarChar(255)
  location    String   @db.VarChar(255)
  description String   @db.Text
  status      Status   @default(OPEN)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  assignee    String?   @db.VarChar(255)

  user User? @relation(fields: [assignee], references: [id], onDelete: Cascade)
}

enum WorkModel {
  HYBRID
  ON_SITE
  REMOTE
}

enum Status {
  OPEN
  IN_PROGRESS
  VIEWED
  REJECTED
  PHONE_SCREEN
  TECHNICAL_INTERVIEW
  BEHAVIOR_INTERVIEW
}


model Account {
  id                 String  @id @default(cuid())
  userId             String
  type               String
  provider           String
  providerAccountId  String
  refresh_token      String?  @db.Text
  access_token       String?  @db.Text
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String?  @db.Text
  session_state      String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
  issues        Issue[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}